package com.revature.challenges.problem_2;

import java.util.stream.IntStream;

/*
    Problem Description:

        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
        with 1 and 2, the first 10 terms will be:

            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
        sum of the even-valued terms up to index "n" of the sequence.

        Constraints:

            1 < n <= 91

 */
public class ProblemTwo {

    public long sumEvenFibNumbers(int exclusiveEnd) {
        if (exclusiveEnd < 2) { return 0L; }
        long result = 0L;
        long previous = 0L;
        long temp;
        long current = 2L;

        for (int i = 2; i < exclusiveEnd; i += 3) {
            result += current;
            System.out.println(result);
            temp = current;
            current = (current*4) + previous;
            previous = temp;
        }

        return result;
    }
}
