package com.revature.challenges.problem_2;

import java.util.stream.IntStream;

/*
    Problem Description:

        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
        with 1 and 2, the first 10 terms will be:

            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
        sum of the even-valued terms up to index "n" of the sequence.

        Constraints:

            1 < n <= 91

 */
public class ProblemTwo {

    public static long sumEvenFibNumbers(int exclusiveEnd) {
        long sum = 0;
        long prev = 0, current = 1, temp = 0;
        for (int i = 1; i <= exclusiveEnd; i++) {
            temp = current;
            current += prev;
            prev = temp;
            System.out.print(i + ": ");
            System.out.println(current);
            if (current % 2 == 0) sum += current;
        }
        return sum;
    }

    public static void main(String[] args) {
        final int EXCLUSIVE_END = 90;
        System.out.println(sumEvenFibNumbers(EXCLUSIVE_END));
    }
}
