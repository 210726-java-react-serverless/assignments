package main.java.com.revature.challenges.problem_2;

import java.util.stream.IntStream;

/*
    Problem Description:

        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
        with 1 and 2, the first 10 terms will be:

            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
        sum of the even-valued terms up to index "n" of the sequence.

        Constraints:

            1 < n <= 91

 */
public class ProblemTwo {

    public ProblemTwo(){

    }

    public long sumEvenFibNumbers(int exclusiveEnd) {
        int current = 1, previous1 = 0, previous2 = 0;
        int[] arr = new int[exclusiveEnd];
        long result = 0;
        for(int i = 0; i < exclusiveEnd; i++){
            previous2 = previous1;
            previous1 = current;
            current+=previous2;

            if(current % 2 == 0){
                result+=current;
            }

        }

        return result;
    }
}
