package com.revature.challenges.problem_2;

import java.math.BigInteger;
import java.util.stream.IntStream;

/*
    Problem Description:

        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
        with 1 and 2, the first 10 terms will be:

            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
        sum of the even-valued terms up to index "n" of the sequence.

        Constraints:

            1 < n <= 91

 */
public class
ProblemTwo {

    public long sumEvenFibNumbers(int exclusiveEnd) {

        long n = 1;
        long m = 2;
        long swap;
        long sum = 0;
        for(int i = 2; i < exclusiveEnd; i++) {
            System.out.println("m, n: " + m + ", " + n);
            if(m%2 == 0) sum += m;
            System.out.println("sum: " + sum);
            swap = m;
            m = m + n;
            n = swap;
        }

        return sum;
    }
}
