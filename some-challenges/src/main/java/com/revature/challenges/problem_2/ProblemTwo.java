package com.revature.challenges.problem_2;

import java.util.stream.IntStream;

/*
    Problem Description:

        Each new term in the Fibonacci sequence is generated by adding the previous two terms. By starting
        with 1 and 2, the first 10 terms will be:

            1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...

        By considering the terms in the Fibonacci sequence whose values do not exceed four million, find the
        sum of the even-valued terms up to index "n" of the sequence.

        Constraints:

            1 < n <= 91

 */
public class ProblemTwo {

    public long sumEvenFibNumbers(int exclusiveEnd) {
        long n = exclusiveEnd;
        long a = 1;
        long b = 2;
        long sum = 0;
        long temp = 0;

        while( b <= n){
            if( b % 2 == 0){
                sum = sum + b;
            }
            temp = b;
            a = b;
            temp = a + b;

        }
        return sum;
    }

    public static void main(String[] args){
        ProblemTwo result = new ProblemTwo();
        System.out.println(result.sumEvenFibNumbers(10));
    }
}
